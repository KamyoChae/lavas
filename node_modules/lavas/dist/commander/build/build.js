/**
 * @file 构建逻辑
 * @author mj(zoumiaojiang@gmail.com)
 */

'use strict';

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

let getConfigPath = (() => {
    var _ref = (0, _asyncToGenerator3.default)(function* (config) {
        if (!config) {
            return;
        }

        if (!path.isAbsolute(config)) {
            config = path.resolve(process.cwd(), config);
        }

        if (!(yield fs.pathExists(config))) {
            log.warn(`${locals.START_NO_FILE} ${config}`);
            return;
        }

        return config;
    });

    return function getConfigPath(_x) {
        return _ref.apply(this, arguments);
    };
})();

/**
 * 处理 build 构建逻辑
 *
 * @param {string} config 用户指定的配置文件路径
 */


function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const path = require('path');
const fs = require('fs-extra');
const fork = require('child_process').fork;

const utils = require('../../lib/utils');
const log = require('../../lib/utils/log');
const locals = require('../../locals')();

module.exports = (() => {
    var _ref2 = (0, _asyncToGenerator3.default)(function* (config) {
        log.info(locals.START_BUILD + '...');

        let rootDir = utils.getLavasProjectRoot();
        let buildScriptPath = path.resolve(rootDir, '.lavas/build.js');

        // 不存在.lavas/build.js 时创建 build.js，避免调用全局 lavas-core-vue
        if (!(yield fs.pathExists(buildScriptPath))) {
            yield fs.copy(path.resolve(__dirname, '../../templates/build.js'), buildScriptPath);
        }

        let options = [];
        let configPath = yield getConfigPath(config);
        if (configPath) {
            options.push(configPath);
        }

        fork(buildScriptPath, options);
    });

    return function (_x2) {
        return _ref2.apply(this, arguments);
    };
})();